*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #e8ffe8;
}
/* A propriedade transform-style define se os elemento filhos são posicionados em um espaco 3D ( preserve-3d )
ou serão achatados ( flat ) no plano do elemento. */
.tree{
    top: -100px;
    position: relative;
    width: 300px;
    height: 300px;
    transform-style: preserve-3d;
    /* Indica que os filhos do elemento devem ser posicionados no espaço 3D. */
    transform: rotateX(-20deg) rotateY(30deg);
    animation: rotate 4s linear infinite;
}
@keyframes rotate {
    0%{
        transform: rotateX(-20deg) rotateY(360deg);
    }
    100%{
        transform: rotateX(-20deg) rotateY(0deg);
    }
    
}
.tree div{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    /* Indica que os filhos do elemento devem ser posicionados no espaço 3D. */
    transform: translateY(calc(100px * var(--j)));
    /* Acopla mais 3 pirâmides no eixo Y. */
}
.tree:before{
    content: '⭐';
    position: absolute;
    font-size: 4em;
    left: calc(50% - 45px);
    top: -120px;
}
.tree div.top span{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, #69c069, #77dd77);
    /* A propriedade clip-path cria uma região de recorte que define qual parte de um elemento deve ser mostrada. 
    As partes que estão dentro da região são mostradas, enquanto as que estão fora ficam ocultas.
    polygon()
    Define um polígono usando uma regra de preenchimento SVG e um conjunto de vértices. */
    clip-path: polygon(50% 0% , 0% 100%, 100% 100%);
    /* A propriedade transform-origin define a origem das transformações de um elemento. */
    transform-origin: bottom;
    border-bottom: 10px solid #00000019;
    transform: rotateY(calc(90deg * var(--i))) rotateX(30deg) translateZ(173px);
     /* Acopla mais 3 pirâmides no eixo X. */
}
.tree div.bottom span{
    position: absolute;
    top: 350px;
    left: calc(50% - 30px);
    width: 60px;
    height: 100%;
    background: linear-gradient(90deg, #bb4622, #df7214);
    /* A propriedade clip-path cria uma região de recorte que define qual parte de um elemento deve ser mostrada. 
    As partes que estão dentro da região são mostradas, enquanto as que estão fora ficam ocultas.
    polygon(), define um polígono usando uma regra de preenchimento SVG e um conjunto de vértices. */
    /*clip-path: polygon(50% 0% , 0% 100%, 100% 100%);
    /* A propriedade transform-origin define a origem das transformações de um elemento. */
    transform-origin: bottom;
    border-bottom: 10px solid #00000055;
    transform: rotateY(calc(90deg * var(--i))) translateZ(30px);
     /* Acopla mais 3 retangulos no eixo X. */
}
.shadow{
    position: absolute;
    top: 0;
    left: 0;
    width: 300px;
    height: 300px;
    background: #0002;
    transform-style: preserve-3d;
    transform: rotateX(90deg) translateZ(-500px);
    /* rotate rotaciona a sombra preta para que fique no plano horizonal, pois primordialmente se encontra
    no plano vertical, já translate posiciona a sombra preta para baixo da arvore. */
    filter: blur(20px);
    /*A propriedade filter aplica efeitos gráficos como desfoque ou mudança de cor a um elemento. Filtros são 
    comumente usados ​​para ajustar a renderização de imagens, planos de fundo e bordas*/
}